#+title: Formal Methods for Databases

* Slide

Title slide

┌─────────────────────────────────────────────────────────────────────────────────────┐
│ ███████  ██████  ██████  ███    ███  █████  ██                                      │
│ ██      ██    ██ ██   ██ ████  ████ ██   ██ ██                                      │
│ █████   ██    ██ ██████  ██ ████ ██ ███████ ██                                      │
│ ██      ██    ██ ██   ██ ██  ██  ██ ██   ██ ██                                      │
│ ██       ██████  ██   ██ ██      ██ ██   ██ ███████                                 │
│                                                                                     │
│ ███    ███ ███████ ████████ ██   ██  ██████  ██████  ███████                        │
│ ████  ████ ██         ██    ██   ██ ██    ██ ██   ██ ██                             │
│ ██ ████ ██ █████      ██    ███████ ██    ██ ██   ██ ███████                        │
│ ██  ██  ██ ██         ██    ██   ██ ██    ██ ██   ██      ██                        │
│ ██      ██ ███████    ██    ██   ██  ██████  ██████  ███████                        │
│                                                                                     │
│ ███████  ██████  ██████                                                             │
│ ██      ██    ██ ██   ██                                                            │
│ █████   ██    ██ ██████                                                             │
│ ██      ██    ██ ██   ██                                                            │
│ ██       ██████  ██   ██                                                            │
│                                                                                     │
│ ██████   █████  ████████  █████  ██████   █████  ███████ ███████ ███████            │
│ ██   ██ ██   ██    ██    ██   ██ ██   ██ ██   ██ ██      ██      ██                 │
│ ██   ██ ███████    ██    ███████ ██████  ███████ ███████ █████   ███████            │
│ ██   ██ ██   ██    ██    ██   ██ ██   ██ ██   ██      ██ ██           ██            │
│ ██████  ██   ██    ██    ██   ██ ██████  ██   ██ ███████ ███████ ███████            │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

- Outline of material:
  - Formal approach to databases
    - Relational algebra
    - Relational calculus
  - Category theory
    - Categories
    - Databases as categories
    - Migrations
┌─────────────────────────────────────────────────────────────────────────────────────┐
│┏━━━━━━━━━━━━┓                 ╔════════════════════╗                  ┏━━━━━━━━━━━━┓│
│┃ZACHARY     ┃                 ║ FORMAL METHODS FOR ║                  ┃ CAS─CS─511 ┃│
│┃MORING      ┃                 ║     DATABASES      ║                  ┃ FALL 2024  ┃│
│┗━━━━━━━━━━━━┛                 ╚════════════════════╝                  ┗━━━━━━━━━━━━┛│
├─────────────────────────────────────────────────────────────────────────────────────┤
│ ┌────────────────┐                         ┌────────────────┐                       │
│ │Introduction to ├────────────────────────▷│Introduction to │                       │
│ │formal database │                         │category theory │                       │
│ │theory          │                         └┬───────────────┘                       │
│ └┬───────────────┘                          │  ┌───────────┐                        │
│  │  ┌───────────────────┐                   ├──▶ Categories│                        │
│  ├──▶ Relational algebra│                   │  └───────────┘                        │
│  │  └───────────────────┘                   │  ┌─────────┐                          │
│  │  ┌────────────────────┐                  ├──▶ Functors│                          │
│  └──▶ Relational calculus│                  │  └─────────┘                          │
│     └────────────────────┘                  │  ┌────────────────────┐               │
│                                             └──▶ Database migrations│               │
│                                                └────────────────────┘               │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

Title: "Formal approaches to databases"

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│          ██████   █████  ████████  █████  ██████   █████  ███████ ███████           │
│          ██   ██ ██   ██    ██    ██   ██ ██   ██ ██   ██ ██      ██                │
│          ██   ██ ███████    ██    ███████ ██████  ███████ ███████ █████             │
│          ██   ██ ██   ██    ██    ██   ██ ██   ██ ██   ██      ██ ██                │
│          ██████  ██   ██    ██    ██   ██ ██████  ██   ██ ███████ ███████           │
│                                                                                     │
│                                                                                     │
│          ████████ ██   ██ ███████  ██████  ██████  ██    ██                         │
│             ██    ██   ██ ██      ██    ██ ██   ██  ██  ██                          │
│             ██    ███████ █████   ██    ██ ██████    ████                           │
│             ██    ██   ██ ██      ██    ██ ██   ██    ██                            │
│             ██    ██   ██ ███████  ██████  ██   ██    ██                            │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                         ┌───────────┤
│                                                                         │ CODD 1970 │
└─────────────────────────────────────────────────────────────────────────┴───────────┘

* Slide

We all know what a database is...

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 01/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴─────────────────────────────────────────────────────────────────┴───────────┤
│                                                                                     │
│                                                                                     │
│                          🭈🭄█🭏🬭🭄█🭏🬭🭄█🭏  🭉🬹🬾   🭄█🭏🬭🭄█🭏🬭🭄█🭏🬽                           │
│                          🭣🬂🭔█████████  ▐█▌   █████████🭟🬂🭘                           │
│                              🭣🬂🭔█████  ▐█▌   █████🭟🬂🭘                               │
│                                  🭣🬂🭔█  ▐█▌   █🭠🬂🭘                                   │
│                                     🭦  ▐=▌   🭛                                      │
│                                        🭦█🭛                                          │
│                                                                                     │
│                                                                                     │
│              ┏━━━━━━━━━━━━┓     ┏━━━━━━━━━━━━━━━━┓                                  │
│              ┃PARTS       ┃     ┃ ALLOCATION     ┃     ┏━━━━━━━━━━━━━━━┓            │
│              ┠────────────┨     ┠────────────────┨     ┃ PROJECT       ┃            │
│              ┃PART_NUMBER ○─────○ PART_NUMBER    ┃     ┠───────────────┨            │
│              ┃NAME        ┃     ┃ PROJECT_NUMBER ○─────○ PROJECT_NUMBER┃            │
│              ┃DESCRIPTION ┃     ┃ QUANTITY       ┃     ┃ CODENAME      ┃            │
│              ┗━━━━━━━━━━━━┛     ┗━━━━━━━━━━━━━━━━┛     ┃ DIVISION      ┃            │
│                                                        ┃ MANAGER       ┃            │
│                                                        ┗━━━━━━━━━━━━━━━┛            │
│                                                                                     │
│                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

Definitions of domains, tuples, relations

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 02/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴─────────────────────────────────────────────────────────────────┴───────────┤
│                                                                                     │
│              ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─ ─ ─ ─ ─ ─ ─ ┬ ─ ─ ─ ─ ─ ─ ─           │
│                   Number    │    String    │    Number          UUID     │          │
│              ├ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─ ─ ─ ─ ─ ─ ─ ┼ ─ ─ ─ ─ ─ ─ ─           │
│              │PROJECT_NUMBER│   CODENAME   │   DIVISION   │   MANAGER    │          │
│           ╒══╪══════════════╪══════════════╪══════════════╪══════════════╡          │
│           │i₁│              │              │              │              │          │
│           ├──┼──────────────┼──────────────┼──────────────┼──────────────┤          │
│           │i₂│              │              │              │              │          │
│           ├──┼──────────────┼──────────────┼──────────────┼──────────────┤          │
│           │i₂│              │              │              │              │          │
│           └──┴──────────────┴──────────────┴──────────────┴──────────────┘          │
│                                                                                     │
│                                                                                     │
│ ┌────────────┬────────────────────────────────────────────┐          ┌────────────┐ │
│ │   DOMAIN   │(Possibly infinite) Set of possible values  │◁────────▷│    TYPE    │ │
│ ├────────────┼────────────────────────────────────────────┤          ├────────────┤ │
│ │   TUPLE    │(d₁ ∈ 𝐷₁, ..., dₙ ∈ 𝐷ₙ)                     │◁────────▷│    ROW     │ │
│ ├────────────┼────────────────────────────────────────────┤          ├────────────┤ │
│ │  RELATION  │Set of tupes; all 𝒾th domains are the same  │◁────────▷│   TABLE    │ │
│ └────────────┴────────────────────────────────────────────┘          └────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

Set construction for database queries

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 03/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴─────────────────────────────────────────────────────────────────┴───────────┤
│                                                                                     │
│              ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─ ─ ─ ─ ─ ─ ─ ┬ ─ ─ ─ ─ ─ ─ ─           │
│                   Number    │    String    │    Number          UUID     │          │
│              ├ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─ ─ ─ ─ ─ ─ ─ ┼ ─ ─ ─ ─ ─ ─ ─           │
│              │PROJECT_NUMBER│   CODENAME   │   DIVISION   │   MANAGER    │          │
│           ╒══╪══════════════╪══════════════╪══════════════╪══════════════╡          │
│           │i₁│              │              │              │              │          │
│  W  ┌──▶  ├──┼──────────────┼──────────────┼──────────────┼──────────────┤          │
│  H  │     │i₂│              │              │              │              │          │
│  E ─┼──▶  ├──┼──────────────┼──────────────┼──────────────┼──────────────┤          │
│  R  │     │i₂│              │              │              │              │          │
│  E  └──▶  └──┴──────────────┴──────────────┴──────────────┴──────────────┘          │
│              ▲              ▲              ▲                                        │
│              └──────────────┼──────────────┘                                        │
│                             │                                                       │
│                          SELECT                                                     │
│                                                                                     │
├─────────────────────────────────────────────────────────────────────────────────────┤
│                                                                                     │
│            Result = { (dₛₑₗ₁, dₛₑₗ₂, ...) : "WHERE" condition is true }             │
│                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

SQL and set theory are directly related to each other; so studying set theory is
how we can study databases.

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 04/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴──────────────────────────────────┬──────────────────────────────┴───────────┤
│                                          │                                          │
│  SELECT                                  │  {                                       │
│    P.MANAGER                             │    P[MANAGER] :                          │
│  FROM                                    │    PROJECTS(P)                           │
│    PROJECTS AS P                         │    AND P[DIVISION] = 4                   │
│  WHERE                                   │    AND ¬∃x ∈ ALLOCATIONS(A) (            │
│    P.DIVISION = 4                        │      P[PROJECT_NUMBER]                   │
│    AND NOT EXISTS (                      │      = x[PROJECT_NUMBER]                 │
│        SELECT 'x'                        │      AND x.QUANTITY > 0                  │
│        FROM ALLOCATIONS AS A             │    )                                     │
│        WHERE (A.PROJECT_NUMBER           │  }                                       │
│          = P.PROJECT_NUMBER)             │                                          │
│        AND A.QUANTITY > 0                │ φ(k) := k ∈ PROJECTS                     │
│    )                                     │   ∧ k[DIVISION] = 4                      │
│  ;                                       │   ∧ ¬∃(x ∈ ALLOCATIONS) (...)            │
│                                          │                                          │
│                                          │                                          │
│                                          │                                          │
│                                          │                                          │
│                                          │                                          │
│                                          │                                          │
└──────────────────────────────────────────┴──────────────────────────────────────────┘

* Slide

Relational algebra and relational calculus

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 05/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴─────────────────────────────────────────────────────────────────┴───────────┤
│ SELECT:                                                                             │
│  σᵩ(X) := { r ∈ X  :  φ(r) }                                                        │
│                                                                                     │
│ PROJECT:                                                                            │
│  πₛ₁,ₛ₂,...(X) := { (s₁, s₂, ...) ⊂ (d₁, d₂, ...)  :  (d₁, d₂, ...) ∈ X }           │
│                                                                                     │
│ UNION:                                                                              │
│  X ∪ Y := { r = (r₁, ..., rₙ)  :  │X│ = │Y│ = n ∧ ... }                             │
│                                                                                     │
│ INTERSECTION:                                                                       │
│  X ∩ Y := { r = (r₁, ..., rₙ)  :  │X│ = │Y│ = n ∧ ... }                             │
│                                                                                     │
│ MINUS:                                                                              │
│  X ⧵ Y := { r = (r₁, ..., rₙ)  :  │X│ = n ∧ r ∈ X ∧ r ∉ Y }                         │
│                                                                                     │
│ CARTESIAN PRODUCT:                                                                  │
│  X × Y := { (x₁, ..., xₙ, y₁, ..., yₘ)  :  (x₁, ..., xₙ) ∈ X ∧ (y₁, ..., yₘ) ∈ Y }  │
│                                                                                     │
│ JOIN:                                                                               │
│  A ⨝ᵪ B:= { (a₁, ..., aₙ, b₁, ..., bₘ)  :  (a₁, ..., aₙ) ∈ A ∧ (b₁, ..., bₘ) ∈ B    │
│                                             ∧ χ(a, b) }                             │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

Relational algebra can be used on other structures, as long as those structures
can be represented as sets.

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 06/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴─────────────────────────────────────────────────────────────────┴───────────┤
│ ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓                                                         │
│ ┃          GRAPH          ┃                       ●                                 │
│ ┃        G = (E, V)       ┃                       ├─────┐                           │
│ ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛                       ●     ●                           │
│ ┌────────┐       ┌────────┐                 ┌─────┤     ├─────┐                     │
│ │  EDGE  │       │ VERTEX │                 ●     ●     ●     ●                     │
│ ├────────┤       ├────────┤                                   ├─────┐               │
│ │ V1     ○─────┬─○ ID     │                                   ●     ●               │
│ │ V2     ○─────┘ └────────┘                                         ├─────┐         │
│ └────────┘                                                          ●     ●         │
│                                                               ┌─────┴─────┐         │
│                                                ◆              ●           ●         │
│                                                │                                    │
│                     ◆──◆───────────◆───────────◆                                    │
│                        │           │           │                                    │
│                        │           ◆           │   ◆                                │
│                        │           │           │   │                                │
│                        ◆───────────◆───────────◆───◆                                │
│                     ┌──┴──┐                    │                                    │
│                     ◆     ◆                    ◆                                    │
│                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide

Summary: Sets and databases are naturally related

┌───────┬─────────────────────────────────────────────────────────────────┬───────────┐
│ 07/07 │                   Introduction to Database Theory               │ CODD 1970 │
├───────┴╥───────────╥──────────────────────────────────────────────╥─────┴╥──────────┤
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
│───────○║ DATABASES ║╔══════╗                         ╔═══════════╗╚══════╝          │
│        ╚═══════════╝║ SETS ║○───────────────────────○║ DATABASES ║╔══════╗          │
│        ╔═══════════╗╚══════╝                         ╚═══════════╝║ SETS ║○─────────│
└────────╨───────────╨──────────────────────────────────────────────╨──────╨──────────┘

* Slide 11

Title: "Categories"

┌─────────────────────────────────────────────────────────────────────────────────────┐
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│         ██████  █████  ████████ ███████  ██████   ██████  ██████  ██    ██          │
│        ██      ██   ██    ██    ██      ██       ██    ██ ██   ██  ██  ██           │
│        ██      ███████    ██    █████   ██   ███ ██    ██ ██████    ████            │
│        ██      ██   ██    ██    ██      ██    ██ ██    ██ ██   ██    ██             │
│         ██████ ██   ██    ██    ███████  ██████   ██████  ██   ██    ██             │
│                                                                                     │
│        ████████ ██   ██ ███████  ██████  ██████  ██    ██                           │
│           ██    ██   ██ ██      ██    ██ ██   ██  ██  ██                            │
│           ██    ███████ █████   ██    ██ ██████    ████                             │
│           ██    ██   ██ ██      ██    ██ ██   ██    ██                              │
│           ██    ██   ██ ███████  ██████  ██   ██    ██                              │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                                                 ┌───────────────────┤
│                                                                 │ FONG, SPIVAK 2018 │
└─────────────────────────────────────────────────────────────────┴───────────────────┘

* Slide 12

Represent a database using Spivak's diagrams

┌───────┬─────────────────────────────────────────────────────────┬───────────────────┐
│ mm/nn │              Category Theory and Databases              │ FONG, SPIVAK 2018 │
├───────┴─────────────────────────────────────────────────────────┴───────────────────┤
│                                                                                     │
│                                                                                     │
│                                                                                     │
│                                          ○ ◀────────────────DIVISION─┐              │
│                                       <Number>                       │              │
│                                                                      │              │
│                                                                      │              │
│                                                                      │              │
│                                                                      │              │
│                                                                                     │
│              ● ◀────PART_NUMBER───────── ● ───────PROJECT_NUMBER───▶ ●              │
│            PARTS                     ALLOCATION                   PROJECT           │
│                                                                                     │
│              ││                                                     ││              │
│              ││                                                     ││              │
│              ││                                                     ││              │
│              ││                                                     ││              │
│              │└─NAME───────────────────▶   ◀───────────────CODENAME─┘│              │
│              └─DESCRIPTION─────────────▶ ○ ◀─────────────────MANAGER─┘              │
│                                       <String>                                      │
│                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────┘

* Slide 13

Airplane economics: These two diagrams "feel" similar even though they are
different graphs

┌───────┬─────────────────────────────────────────────────────────┬───────────────────┐
│ mm/nn │              Category Theory and Databases              │ FONG, SPIVAK 2018 │
├───────┴──────────────────────────────────┬──────────────────────┴───────────────────┤
│                                          │                                          │
│                                          │                                          │
│                                          │                      ○                   │
│                                          │                   <MONEY>                │
│           ┌─PRICE─▶ ○ ◀─PRICE─┐          │                      ▲                   │
│           │      <MONEY>      │          │                      │                   │
│           │                   │          │                    COST                  │
│           │                   │          │                      │                   │
│           │                   │          │                      │                   │
│           ●                   ●          │                      ●                   │
│        ECONOMY           FIRST_CLASS     │                    TICKET                │
│           │                   │          │                      │                   │
│           │                   │          │                      │                   │
│           │                   │          │                    CHAIR                 │
│           └─SEAT──▶ ○ ◀──SEAT─┘          │                      │                   │
│                  <STRING>                │                      ▼                   │
│                                          │                      ○                   │
│                                          │                   <STRING>               │
│                                          │                                          │
├──────────────────────────────────────────┼──────────────────────────────────────────┤
│             USONIAN AIRLINES             │             SPECTER AIRLINES             │
└──────────────────────────────────────────┴──────────────────────────────────────────┘

* Slide 14

Foreign and primary keys

┌───────┬─────────────────────────────────────────────────────────┬───────────────────┐
│ mm/nn │              Category Theory and Databases              │ FONG, SPIVAK 2018 │
├───────┴──────────────────────────────────┬──────────────────────┴───────────────────┤
│     ╭───────╮       ╭──────────────╮     │   ╭───────────╮         ╭─────────────╮  │
│     │  SET  │◆─────◆│COLUMN/1-TUPLE│     │   │ FUNCTIONS │◆───────◆│ FOREIGN KEY │  │
│     ╰───────╯       ╰──────────────╯     │   ╰───────────╯         ╰─────────────╯  │
│                        ┌─────────┐    ┌──┼───────────────────────────────────┐      │
│                        │ PLANET  │ ◀──┘  │                    ┌─────────┬────┴────┐ │
│                        ├─────────┤       │                    │ ELEMENT │ PLANET  │ │
│      {Mercury,         │ Mercury │       │                    ├─────────┼─────────┤ │
│      Venus,            │ Venus   │       │                    │  WATER  │ MERCURY │ │
│      Earth,            │ Earth   │       │     ƒ : E → P      │  WOOD   │ JUPITER │ │
│      Mars,             │ Mars    │       │                    │  FIRE   │ MARS    │ │
│      Jupiter,          │ Jupiter │       │                    │  METAL  │ VENUS   │ │
│      Saturn,           │ Saturn  │       │                    │  EARTH  │ SATURN  │ │
│      Uranus,           │ Uranus  │       │                    └─────────┴─────────┘ │
│      Neptune}          │ Neptune │       │                                          │
│                        └─────────┘       │                                          │
├──────────────────────────────────────────┼──────────────────────────────────────────┤
│                                          │                                          │
│                                          │                                          │
│                    ●                     │          ●  ────FUNCTION─────▶ ●         │
│                   SET                    │        DOMAIN               CODOMAIN     │
│                                          │                                          │
└──────────────────────────────────────────┴──────────────────────────────────────────┘

* Slide 15

Foreign keys as functions

┌───────┬─────────────────────────────────────────────────────────┬───────────────────┐
│ mm/nn │              Category Theory and Databases              │ FONG, SPIVAK 2018 │
├───────┴──────────────────────────────────┬──────────────────────┴───────────────────┤
│            ╔══════════════╗              │   ╭───────────╮         ╭─────────────╮  │
│            ║ Foreign Keys ║              │   │ FUNCTIONS │◆───────◆│ FOREIGN KEY │  │
│            ╚══════════════╝              │   ╰───────────╯         ╰─────────────╯  │
│                                          │                                          │
│  WELL-DEFINED                            │                    ┌─────────┬─────────┐ │
│      Referential integrity               │                    │ ELEMENT │ PLANET  │ │
│       "Enumerated" options               │                    ├─────────┼─────────┤ │
│                                          │                    │  WATER  │ MERCURY │ │
│                                          │     ƒ : E → P      │  WOOD   │ JUPITER │ │
│  INJECTIVE                               │                    │  FIRE   │ MARS    │ │
│      "One-to-one relation"               │                    │  METAL  │ VENUS   │ │
│                                          │                    │  EARTH  │ SATURN  │ │
│                                          │                    └─────────┴─────────┘ │
│  SURJECTIVE                              │                                          │
│      A "complete" reference              │                                          │
│                                          ├──────────────────────────────────────────┤
│                                          │                                          │
│  BIJECTIVE                               │                                          │
│      Perfect correspondence              │          ●  ────FUNCTION─────▶ ●         │
│                                          │        DOMAIN               CODOMAIN     │
│                                          │                                          │
└──────────────────────────────────────────┴──────────────────────────────────────────┘

* Slide 16

Definition of a category

* Slide 17

How a category and a database "look like" each other

* Slide 18

Free category on a graph

* Slide 19

Preorder on a graph

* Slide 20

Isomorphism of categories

* Slide 21

So: Are categories a good way to reason about databases?

* Slide 22

A database schema is a category

* Slide 23

Definition of a functor

* Slide 24

Example of a "bijective"-like functor

* Slide 25

Example of an "embedding"-like functor

* Slide 24

Definition of a natural transformation

* Slide 25

Example diagram of a natural transformation

* Slide 26

You can understand data migrations using natural transformations to ensure that
data from one schema can be encoded into the other.

* Slide 27

* Slide 28

* Slide 29

* Slide 30

* Slide 31

* Slide 32

* Slide 33

* Slide 34

* Slide 35
